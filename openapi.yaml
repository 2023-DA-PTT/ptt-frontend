---
openapi: 3.0.3
info:
  title: ptt-backend API
  version: 1.0.0-SNAPSHOT
paths:
  /api/datapoint:
    get:
      tags:
      - Data Point Resource
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataPointDto'
  /api/datapoint/planrun/{planRunId}:
    get:
      tags:
      - Data Point Resource
      parameters:
      - name: planRunId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataPointDto'
  /api/datapoint/planrun/{planRunId}/step/{stepId}:
    get:
      tags:
      - Data Point Resource
      parameters:
      - name: planRunId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: stepId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataPointDto'
  /api/node/locations:
    get:
      tags:
      - Node Resource
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  type: string
  /api/plan:
    get:
      tags:
      - Plan Resource
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlanDto'
  /api/plan/user/{userId}:
    get:
      tags:
      - Plan Resource
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlanDto'
  /api/plan/{id}:
    get:
      tags:
      - Plan Resource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanDto'
  /api/plan/{planId}/step:
    get:
      tags:
      - Step Resource
      parameters:
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StepDto'
  /api/plan/{planId}/step/http:
    get:
      tags:
      - Http Step Resource
      parameters:
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HttpStepDto'
    post:
      tags:
      - Http Step Resource
      parameters:
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HttpStepDto'
      responses:
        "200":
          description: OK
  /api/plan/{planId}/step/script:
    get:
      tags:
      - Script Step Resource
      parameters:
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScriptStepDto'
    post:
      tags:
      - Script Step Resource
      parameters:
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptStepDto'
      responses:
        "200":
          description: OK
  /api/plan/{planId}/step/{stepId}:
    get:
      tags:
      - Step Resource
      parameters:
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: stepId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StepDto'
    delete:
      tags:
      - Step Resource
      parameters:
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: stepId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/plan/{planId}/step/{stepId}/http:
    get:
      tags:
      - Http Step Resource
      parameters:
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: stepId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
    put:
      tags:
      - Http Step Resource
      parameters:
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: stepId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HttpStepDto'
      responses:
        "200":
          description: OK
  /api/plan/{planId}/step/{stepId}/inputArgument:
    get:
      tags:
      - Input Argument Resource
      parameters:
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: stepId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InputArgumentDto'
    post:
      tags:
      - Input Argument Resource
      parameters:
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: stepId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputArgumentDto'
      responses:
        "200":
          description: OK
  /api/plan/{planId}/step/{stepId}/inputArgument/{inArgId}:
    get:
      tags:
      - Input Argument Resource
      parameters:
      - name: inArgId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: stepId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InputArgumentDto'
    put:
      tags:
      - Input Argument Resource
      parameters:
      - name: inArgId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: stepId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputArgumentDto'
      responses:
        "200":
          description: OK
    delete:
      tags:
      - Input Argument Resource
      parameters:
      - name: inArgId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: stepId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/plan/{planId}/step/{stepId}/nexts:
    get:
      tags:
      - Step Resource
      parameters:
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: stepId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NextStepDto'
  /api/plan/{planId}/step/{stepId}/outputArgument:
    get:
      tags:
      - Output Argument Resource
      parameters:
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: stepId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputArgumentDto'
    post:
      tags:
      - Output Argument Resource
      parameters:
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: stepId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutputArgumentDto'
      responses:
        "200":
          description: OK
  /api/plan/{planId}/step/{stepId}/outputArgument/{outArgId}:
    get:
      tags:
      - Output Argument Resource
      parameters:
      - name: outArgId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: stepId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputArgumentDto'
    put:
      tags:
      - Output Argument Resource
      parameters:
      - name: outArgId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: stepId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutputArgumentDto'
      responses:
        "200":
          description: OK
    delete:
      tags:
      - Output Argument Resource
      parameters:
      - name: outArgId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: stepId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/plan/{planId}/step/{stepId}/parameterRelation:
    post:
      tags:
      - Step Parameter Relation Resource
      parameters:
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: stepId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StepParameterRelationDto'
      responses:
        "200":
          description: OK
  /api/plan/{planId}/step/{stepId}/parameterRelation/from:
    get:
      tags:
      - Step Parameter Relation Resource
      parameters:
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: stepId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StepParameterRelationDto'
  /api/plan/{planId}/step/{stepId}/parameterRelation/to:
    get:
      tags:
      - Step Parameter Relation Resource
      parameters:
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: stepId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StepParameterRelationDto'
  /api/plan/{planId}/step/{stepId}/script:
    get:
      tags:
      - Script Step Resource
      parameters:
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: stepId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
    put:
      tags:
      - Script Step Resource
      parameters:
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: stepId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptStepDto'
      responses:
        "200":
          description: OK
  /api/plan/{userId}:
    post:
      tags:
      - Plan Resource
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanDto'
      responses:
        "200":
          description: OK
  /api/planrun:
    get:
      tags:
      - Plan Run Resource
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlanRunDto'
    post:
      tags:
      - Plan Run Resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanRunDto'
      responses:
        "200":
          description: OK
  /api/planrun/plan/{planId}:
    get:
      tags:
      - Plan Run Resource
      parameters:
      - name: planId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlanRunDto'
  /api/planrun/{planrunid}:
    get:
      tags:
      - Plan Run Resource
      parameters:
      - name: planrunid
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanRunDto'
components:
  schemas:
    DataPointDto:
      type: object
      properties:
        id:
          format: int64
          type: integer
        planRunId:
          format: int64
          type: integer
        stepId:
          format: int64
          type: integer
        startTime:
          format: int64
          type: integer
        duration:
          format: int64
          type: integer
    HttpStepDto:
      type: object
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        description:
          type: string
        method:
          type: string
        url:
          type: string
        body:
          type: string
        responseContentType:
          $ref: '#/components/schemas/RequestContentType'
        contentType:
          $ref: '#/components/schemas/RequestContentType'
        headers:
          type: array
          items:
            $ref: '#/components/schemas/HttpStepHeaderDto'
    HttpStepHeaderDto:
      type: object
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        value:
          type: string
    InputArgumentDto:
      type: object
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        stepId:
          format: int64
          type: integer
    NextStepDto:
      type: object
      properties:
        id:
          format: int64
          type: integer
        toStep:
          $ref: '#/components/schemas/StepDto'
        repeatAmount:
          format: int32
          type: integer
    OutputArgumentDto:
      type: object
      properties:
        stepId:
          format: int64
          type: integer
        id:
          format: int64
          type: integer
        name:
          type: string
        parameterLocation:
          type: string
        outputType:
          $ref: '#/components/schemas/OutputType'
    OutputType:
      enum:
      - PLAIN_TEXT
      - OCTET_STREAM
      type: string
    PlanDto:
      type: object
      properties:
        id:
          format: int64
          type: integer
        startId:
          format: int64
          type: integer
        name:
          type: string
        description:
          type: string
    PlanRunDto:
      type: object
      properties:
        id:
          format: int64
          type: integer
        planId:
          format: int64
          type: integer
        startTime:
          format: int64
          type: integer
        duration:
          format: int64
          type: integer
        runOnce:
          type: boolean
        planRunInstructions:
          type: array
          items:
            $ref: '#/components/schemas/PlanRunInstructionDto'
    PlanRunInstructionDto:
      type: object
      properties:
        numberOfClients:
          format: int32
          type: integer
        nodeName:
          type: string
    RequestContentType:
      enum:
      - APPLICATION_JSON
      - MULTIPART_FORM_DATA
      type: string
    ScriptStepDto:
      type: object
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        description:
          type: string
        script:
          type: string
    StepDto:
      type: object
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        description:
          type: string
        type:
          type: string
    StepParameterRelationDto:
      type: object
      properties:
        id:
          format: int64
          type: integer
        fromId:
          format: int64
          type: integer
        toId:
          format: int64
          type: integer
